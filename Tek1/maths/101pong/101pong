#!/usr/bin/env python3
##
## EPITECH PROJECT, 2024
## maths
## File description:
## new_pong
##

import math, sys


def usage():
    print("USAGE")
    print("    ./101pong x0 y0 z0 x1 y1 z1 n")
    print("DESCRIPTION")
    print("    x0 ball abscissa at time t - 1")
    print("    y0 ball ordinate at time t - 1")
    print("    z0 ball altitude at time t - 1")
    print("    x1 ball abscissa at time t")
    print("    y1 ball ordinate at time t")
    print("    z1 ball altitude at time t")
    print("    n time shift (greater than or equal to zero, integer")
    sys.exit(0)


def parse_arguments():
    if len(sys.argv) == 2 and sys.argv[1] == "-h":
        usage()
    if len(sys.argv) != 8:
        usage()
        sys.exit(84)

    try:
        coordinates = [float(arg) for arg in sys.argv[1:7]]
        n = int(sys.argv[7])
        if n < 0:
            raise ValueError
    except ValueError:
        print("Invalid input: coordinates must be floats and n must be a non-negative integer.", file=sys.stderr)
        sys.exit(84)
    
    return coordinates, n


def compute_vector(x0, y0, z0, x1, y1, z1):
    return x1 - x0, y1 - y0, z1 - z0


def future_position(x1, y1, z1, vector, n):
    return x1 + vector[0] * n, y1 + vector[1] * n, z1 + vector[2] * n


def will_hit_bat(vector, z1):
    x, y, z = vector
    return z != 0 and (-z1 / z) >= 0


def norm(vector):
    return math.sqrt(sum(comp ** 2 for comp in vector))


def compute_angle(vector):
    x, y, z = vector
    norm_vector = norm(vector)
    if norm_vector == 0:
        return 0
    angle_rad = math.asin(abs(z) / norm_vector)
    
    angle_deg = math.degrees(angle_rad)
    return angle_deg

def print_results(vector, future_pos, n, z1, angle=None):
    print("The velocity vector of the ball is:")
    print(f"({vector[0]:.2f}, {vector[1]:.2f}, {vector[2]:.2f})")
    print(f"At time t + {n}, ball coordinates will be:")
    print(f"({future_pos[0]:.2f}, {future_pos[1]:.2f}, {future_pos[2]:.2f})")
    if angle is not None and z1 != 0:
        print("The incidence angle is:")
        print(f"{angle:.2f} degrees")
    else:
        print("The ball won't reach the paddle.")


def main():
    (x0, y0, z0, x1, y1, z1), n = parse_arguments()
    vector = compute_vector(x0, y0, z0, x1, y1, z1)
    future_pos = future_position(x1, y1, z1, vector, n)
    if will_hit_bat(vector, z1):
        angle = compute_angle(vector)
        print_results(vector, future_pos, n, z1, angle)
    else:
        print_results(vector, future_pos, n, z1)


if __name__ == "__main__":
    main()
